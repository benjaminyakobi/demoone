name: Next.js 13 CI\CD Build-Test-Deploy-Release

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-project:
    name: Build project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn package manager
        run: npm i yarn --legacy-peer-deps
      - name: Install dependencies with yarn
        run: yarn install
      - name: Build project assets
        run: yarn build
      - name: Archive project assets
        uses: actions/upload-artifact@v3
        with:
          name: .next
          path: .next

  deploy-project:
    needs: build-project
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Start deployment to Vercel
        uses: bobheadxi/deployments@v1
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/main'] }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Push to Vercel
        uses: amondnet/vercel-action@v20 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: ${{ fromJSON('["--prod", ""]')[github.ref != 'refs/heads/main'] }} #Optional
          vercel-org-id: ${{ secrets.ORG_ID}} #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required
          scope: ${{ secrets.ORG_ID}}
          working-directory: ./

  release-project:
    name: Release project to GitHub
    needs: deploy-project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for github-action-get-previous-tag
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: .next
          path: .next
      - name: Test artifact download
        run: ls -R
      - name: Archive project assets
        uses: thedoctor0/zip-release@main
        with:
          filename: "project.zip"
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0 # Optional fallback tag to use when no tag can be found
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Docs: https://github.com/marketplace/actions/next-semvers
      - name: Get next major version
        id: semver
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: Create release
        id: create_release_id
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #  major: x.0.0, minor: 0.x.0, patch: 0.0.x
          tag_name: ${{ steps.semver.outputs.major }}
          release_name: Release ${{ steps.semver.outputs.major }}

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_id.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          asset_path: ./project.zip
          asset_name: project-v${{ steps.semver.outputs.major }}.zip
          asset_content_type: application/zip

  release-docker-image:
    name: Release image to DockerHub & GHCR
    needs: deploy-project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for github-action-get-previous-tag
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0 # Optional fallback tag to use when no tag can be found
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Docs: https://github.com/marketplace/actions/next-semvers
      - name: Get next major version
        id: semver
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            benjaminyakobi/demoone:latest
            benjaminyakobi/demoone:${{ steps.semver.outputs.major }}
            ghcr.io/benjaminyakobi/demoone:latest
            ghcr.io/benjaminyakobi/demoone:${{ steps.semver.outputs.major }}
